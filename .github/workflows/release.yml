name: publish-release
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v4.2020.08.2

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8' ]
        architecture: [ 'x64' ]
    name: CLI Release Automation
    steps:
      - uses: actions/checkout@v2.3.2

      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: ${{ matrix.architecture }}

      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Make
        run: cd distro && make

      - name: Set HZ_VERSION
        run: |
          echo ::set-env name=HZ_VERSION::$(grep '<hazelcast.version>' pom.xml | sed "s@.*<hazelcast.version>\(.*\)</hazelcast.version>.*@\1@")

      - name: Set RELEASE & RELEASE_INFO
        run: |
          echo ::set-env name=RELEASE::$(echo ${{ github.ref }} | cut -c 12-)
          echo ::set-env name=RELEASE_INFO::$(distro/build/dist/hazelcast-${{ env.HZ_VERSION }}/bin/hz -V)

      - name: Set ASSET_NAME
        run: |
          echo ::set-env name=ASSET_NAME::$(printf "hazelcast-%s.tar.gz" ${{ env.HZ_VERSION }})

      - name: Set ASSET_PATH
        run: |
          echo ::set-env name=ASSET_PATH::$(printf "distro/build/dist/%s" ${{ env.ASSET_NAME }})

      - name: Set ASSET_SHASUM
        run: |
          echo ::set-env name=ASSET_SHASUM::$(sha256sum ${{ env.ASSET_PATH }} | cut -d ' ' -f 1)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ env.RELEASE }}
          body: |
            Hazelcast Command Line ${{ env.RELEASE }} release
            # Version Info
            ${{ env.RELEASE_INFO }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: application/zip

      - name: Create & Upload deb package
        run: |
          mkdir -p packages/deb/hazelcast/usr/lib/hazelcast
          mkdir -p packages/deb/hazelcast/usr/bin
          tar -xvf ${{ env.ASSET_PATH }} -C packages/deb/hazelcast/usr/lib/hazelcast/
          ln -s /usr/lib/hazelcast/hazelcast-${{ env.HZ_VERSION }}/bin/hz packages/deb/hazelcast/usr/bin/hz
          sed -i 's+Version:.*$+Version: ${{ env.RELEASE }}+g' packages/deb/hazelcast/DEBIAN/control
          dpkg-deb --build packages/deb/hazelcast
          mv packages/deb/hazelcast.deb hazelcast-${{ env.RELEASE }}-all.deb
          curl --header "X-GPG-PASSPHRASE: ${{ secrets.BINTRAY_PASSPHRASE }}" -T hazelcast-${{ env.RELEASE }}-all.deb \
            -udevopshazelcast:${{ secrets.BINTRAY_SECRET }} \
            "https://api.bintray.com/content/hazelcast/deb/hazelcast/${{ env.RELEASE }}/hazelcast-${{ env.HZ_VERSION }}-all.deb;deb_distribution=stable;deb_component=main;deb_architecture=all;publish=1"

      - name: Create & Sign & Upload rpm package
        run: |
          sudo mkdir -p /home/runner/rpmbuild/SOURCES/
          sudo cp ${{ env.ASSET_PATH }} /home/runner/rpmbuild/SOURCES/
          sed -i 's+%define hzversion.*$+%define hzversion ${{ env.HZ_VERSION }}+g' packages/rpm/hazelcast.spec
          sed -i 's+Version:.*$+Version:    ${{ env.RELEASE }}+g' packages/rpm/hazelcast.spec
          cp packages/rpm/.rpmmacros /home/runner/
          gpg --list-keys
          sudo printf "${{ secrets.DEVOPS_PRIVATE_KEY }}" | base64 --decode > /home/runner/.gnupg/private.key
          gpg --batch --import /home/runner/.gnupg/private.key
          sudo printf 'allow-preset-passphrase' > /home/runner/.gnupg/gpg-agent.conf
          gpg-connect-agent reloadagent /bye
          /usr/lib/gnupg2/gpg-preset-passphrase --passphrase ${{ secrets.BINTRAY_PASSPHRASE }} --preset 50907674C38F9E099C35345E246EBBA203D8E107
          gpg --export -a 'Hazelcast' > RPM-GPG-KEY-Hazelcast
          sudo rpm --import RPM-GPG-KEY-Hazelcast
          sudo rpmbuild -bb packages/rpm/hazelcast.spec
          sudo rpm --addsign /home/runner/rpmbuild/RPMS/noarch/hazelcast-${{ env.RELEASE }}-1.noarch.rpm
          curl --header "X-GPG-PASSPHRASE: ${{ secrets.BINTRAY_PASSPHRASE }}" -T \
            /home/runner/rpmbuild/RPMS/noarch/hazelcast-${{ env.RELEASE }}-1.noarch.rpm -udevopshazelcast:${{ secrets.BINTRAY_SECRET }} \
            "https://api.bintray.com/content/hazelcast/rpm/hazelcast/${{ env.RELEASE }}/hazelcast-${{ env.RELEASE }}-1.noarch.rpm;publish=1"

      - name: Checkout homebrew-hz repo
        uses: actions/checkout@v2.3.1
        with:
          repository: alparslan/homebrew-hz
          ref: master
          token: ${{ secrets.DEVOPS_SECRET }}

      - name: Change the artifact in homebrew-hz
        run: |
          sed -i 's+url.*$+url "${{ steps.upload-release-asset.outputs.browser_download_url }}"+g' hazelcast.rb
          sed -i 's+sha256.*$+sha256 "${{ env.ASSET_SHASUM }}"+g' hazelcast.rb

      - name: Commit changes
        run: |
          git config --global user.name 'devOpsHazelcast'
          git config --global user.email 'devops@hazelcast.com'
          git commit -am "Hazelcast Command Line ${{ env.RELEASE }} release"

      - name: Push to homebrew-hz repo
        run: git push